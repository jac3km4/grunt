name: Release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        - build: linux-x86_64
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false
          artifact: grunt
          output_artifact: grunt-linux-x86_64
        - build: linux-armv7
          os: ubuntu-latest
          rust: stable
          target: armv7-unknown-linux-gnueabihf
          linker: gcc-arm-linux-gnueabihf
          cross: true
          artifact: grunt
          output_artifact: grunt-linux-armv7
        - build: macos-aarch64
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          cross: false
          artifact: grunt
          output_artifact: grunt-macos-aarch64
        - build: windows-x86_64
          os: windows-latest
          rust: stable
          target: x86_64-pc-windows-msvc
          cross: false
          artifact: grunt.exe
          output_artifact: grunt-windows-x86_64.exe
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-${{ matrix.rust }}

    - name: Install Linker
      if: matrix.cross
      run: |
        sudo apt update
        sudo apt install ${{ matrix.linker }}
    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        rustup show
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Copy Artifacts
      run: |
        cp target/${{ matrix.target }}/release/${{ matrix.artifact }} ./${{ matrix.output_artifact }}
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./${{ matrix.output_artifact }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
